--[ VII ] DDL, DCL, DML
--SQL = DDL(테이블 생성, 테이블삭제, 테이블구조변경, 테이블 모든 데이터 제거) + 
--      DML(SELECT, INSERT, UPDATE, DELETE) + 
--      DCL(사용자계정 생성, 사용자에게권한부여, 권한박탈, 사용자계정삭제, 트랜젝션 명령어)

-- ★ ★ ★ DDL ★ ★ ★
-- 1. 테이블 생성(CREATE TABLE 테이블명...) : 테이블 구조를 정의하기
CREATE TABLE BOOK (
    BOOKID NUMBER(4), -- BOOKID 필드의 타입은 숫자 4자리
    BOOKNAME VARCHAR2(20), -- BOOKNAME필드의 타입은 문자 20BYTE
    PUBLISHER VARCHAR2(20), -- PUBLISHER 필드의 타입은 문자 20BYTE
    RDATE     DATE,         -- RDATE 필드의 타입은 DATE형
    PRICE     NUMBER(8, 2),  -- PRICE필드의 타입은 숫자 전체 8자리, 소수점 2, 소수점앞 6. 소수점은 자리수 포함되지 않음
    PRIMARY KEY(BOOKID) -- 제약조건 : BOOKID필드가 주키(PRIMARY KEY : NOT NULL, UNIQUE)
);
SELECT * FROM BOOK;
DESC BOOK;

DROP TABLE BOOK; -- 테이블 삭제
CREATE TABLE BOOK(
    BID       NUMBER(4) PRIMARY KEY,
    BNAME     VARCHAR2(20),
    PUBLISHER VARCHAR2(20),
    RDATE     DATE,
    PRICE     NUMBER(8));
SELECT * FROM BOOK;
DESC BOOK;

    -- ex. EMP와 유사한 EMP01 테이블 : EMPNO(숫자4), ENAME(문자10), SAL(숫자7,2)
CREATE TABLE EMP01(
    EMPNO NUMBER(4),
    ENAME VARCHAR2(10),
    SAL   NUMBER(7,2)
);
SELECT * FROM EMP01;
    -- ex. DEPT01 테이블 : DEPTNO(숫자2:PK), DNAME(문자14), LOC(문자13)
CREATE TABLE DEPT01 ( 
    DEPTNO NUMBER(2) PRIMARY KEY,
    DNAME  VARCHAR2(14),
    LOC    VARCHAR2(13)
);
SELECT * FROM DEPT01;
-- 서브쿼리를 이용한 테이블 생성
CREATE TABLE EMP02
    AS
    SELECT * FROM EMP; -- 서브쿼리 결과로 EMP02 테이블 생성 후 데이터도 들어감(제약조건 미포함)
SELECT * FROM EMP02;
DESC EMP02;
    -- EMP03 : EMP 테이블에서 EMPNO, ENAME, DEPTNO만 추출한 데이터
CREATE TABLE EMP03 AS SELECT EMPNO, ENAME, DEPTNO FROM EMP;
SELECT * FROM EMP03;
    -- EMP04 : EMP테이블에서 10번 부서만 추출한 데이터
CREATE TABLE EMP04 AS SELECT * FROM EMP WHERE DEPTNO=10;
SELECT * FROM EMP04;
    -- EMP05 : EMP테이블 구조만 추출(데이터를 추출하지 않음)
CREATE TABLE EMP05 AS SELECT * FROM EMP WHERE 0=1;
SELECT * FROM EMP05;

DESC EMP;
SELECT * FROM EMP;
SELECT ROWNUM, EMPNO, ENAME, JOB FROM EMP; -- 테이블에서 행의 논리적 순서(읽어들인 순서)

-- 2. 테이블 구조 변경 (ALTER TABLE 테이블명 ADD || MODIFY || DROP ~)
-- (1) 필드 추가(ADD)
SELECT * FROM EMP03; -- EMPNO(수4), ENAME(문10), DEPTNO(수2)
ALTER TABLE EMP03 ADD (JOB VARCHAR2(20), SAL NUMBER(7,2) );
SELECT * FROM EMP03; -- 필드 추가시 데이터 NULL로
ALTER TABLE EMP03 ADD (COMM NUMBER(7,2));
--(2) 필드 수정(MODIFY)
SELECT * FROM EMP03; -- EMPNO(수4), ENAME(문10), DEPTNO(수2), JOB, SAL, COMM은 NULL
ALTER TABLE EMP03 MODIFY (EMPNO VARCHAR2(5)); -- 숫자데이터가 들어있어서 숫자로만 변경.
ALTER TABLE EMP03 MODIFY (EMPNO NUMBER(5)); 
ALTER TABLE EMP03 MODIFY (EMPNO NUMBER(4)); -- 숫자 데이터는 줄이는게 안 됨
ALTER TABLE EMP03 MODIFY (SAL VARCHAR2(10)); -- NULL 필드는 마음대로 수정 가능
ALTER TABLE EMP03 MODIFY (ENAME VARCHAR2(20)); -- 문자데이터 늘리거나 줄이거나 가능
DESC EMP03;
SELECT * FROM EMP03;
SELECT MAX(LENGTH(ENAME)) FROM EMP03;
ALTER TABLE EMP03 MODIFY (ENAME VARCHAR2(6)); -- 가능
ALTER TABLE EMP03 MODIFY (ENAME VARCHAR2(5)); -- 불가능
-- (3)필드 삭제(DROP)
ALTER TABLE EMP03 DROP COLUMN JOB; -- NULL인 필드 삭제(NULL이 아닌 필드는 데이터까지 삭제)
SELECT * FROM EMP03;
ALTER TABLE EMP03 DROP COLUMN DEPTNO;
-- 논리적으로 특정 필드를 접근 못하도록(낮)
ALTER TABLE EMP03 SET UNUSED (COMM);
SELECT * FROM EMP03;
--논리적으로 접근 불가했던 필드 물리적으로 삭제(새벽)
ALTER TABLE EMP03 DROP UNUSED COLUMNS;

-- 3. 테이블 삭제(DROP TABLE 테이블명)
DROP TABLE EMP01;
SELECT * FROM EMP01;
DROP TABLE DEPT; -- EMP테이블에서 DEPT테이블을 참조하는 경우 EMP테이블을 삭제한 후 DEPT 테이블 삭제

-- 4. 테이블의 모든 행을 제거(TRUNCATE TABLE 테이블명)
SELECT * FROM EMP03;
TRUNCATE TABLE EMP03; -- ROLLBACK 안 됨
SELECT * FROM EMP03;

-- 5. 테이블명 변경(RENAME 테이블명 TO 바꿀테이블명)
SELECT * FROM EMP02;
RENAME EMP02 TO EMP2;
SELECT * FROM EMP2;

-- 6. 데이터 딕셔너리(접근불가) VS. 데이터딕셔너리 뷰(접근용)






